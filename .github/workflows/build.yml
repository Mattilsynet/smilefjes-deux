name: Build and publish smilefjes.mattilsynet.no

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
  schedule:
    - cron: '0 5 * * *'

permissions:
  id-token: write
  contents: read

concurrency: ci

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Get deployment sha
        id: sha
        run: echo "sha=$(cut -c 1-10 <<< ${{ github.sha }})" >> $GITHUB_OUTPUT

  # Skal vi i det hele tatt bygge?
  preconditions:
    needs:
      - configure
    outputs:
      key: ${{ steps.cache-key.outputs.key }}
      cache-hit: ${{ steps.check.outputs.cache-hit }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: cache-key
        run: echo "key=$(.github/get_data_cache_key.sh)" >> $GITHUB_OUTPUT
      - name: Determine if a build is required
        id: check
        uses: actions/cache@v3
        with:
          path: |
            data
          key: data-files-${{ steps.cache-key.outputs.key }}-${{ github.sha }}

  notify-start:
    needs:
      - configure
      - preconditions
    if: needs.preconditions.outputs.cache-hit != 'true'
    runs-on: ubuntu-latest
    outputs:
      slack-message: ${{ steps.slack.outputs.message-id }}
    steps:
      - name: Notify build start
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          text: ":neutral_face: Tar på frakk og lue …"

  test:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: 1.11.1.1413
      - name: Cache maven build deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-clojure-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-test
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-test
      - name: Notify testing
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":slightly_smiling_face: Kjører tester …"
      - name: Test
        run: make test

  build:
    runs-on: ubuntu-latest

    needs:
      - configure
      - preconditions
      - notify-start

    steps:
      - name: Notify build
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":grinning: Bygger docker image …"
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: 1.11.1.1155
      - name: Cache maven build deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-clojure-build-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-build
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-build-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-build
      - name: Cache exported files
        uses: actions/cache@v3
        with:
          path: |
            docker/build/**/*
          key: exported-files-${{ github.sha }}
          restore-keys: |
            exported-files-
      - name: Cache data files
        uses: actions/cache@v3
        with:
          path: |
            data
          key: data-files-${{ needs.preconditions.outputs.key }}-${{ github.sha }}
          restore-keys: |
            data-files-${{ needs.preconditions.outputs.key }}-
            data-files-
      - name: Download data
        run: ./download.sh
      - name: Build docker image
        run: make docker
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/799884623953/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: artifacts-wi-sa-github-actions@artifacts-352708.iam.gserviceaccount.com
      - name: Log in to Google Artifact Registry (GAR)
        uses: docker/login-action@v1
        with:
          registry: europe-north1-docker.pkg.dev/artifacts-352708
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":smiley: Publiserer docker image …"
      - name: Publish docker image
        run: make publish

  deploy:
    runs-on: ubuntu-latest
    needs:
      - configure
      - notify-start
      - build

    name: Deployer vha Cloud Run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/614511977868/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: cloudrun-wi-sa-github-actions@smilefjes-4614.iam.gserviceaccount.com
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":smile: Henger opp plakaten …"
      - name: Deploying
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          project_id: smilefjes-4614
          region: europe-north1
          service: smilefjes
          image: europe-north1-docker.pkg.dev/artifacts-352708/mat/smilefjes:${{ needs.configure.outputs.sha }}

  notify-success:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start
      - test
      - deploy

    if: success()

    steps:
      - name: Notify build & push success
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":grin: Ferdig, uten skriftlig veiledning"

  notify-failure:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start
      - test
      - deploy

    if: failure()

    steps:
      - name: Notify failure
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":white_frowning_face: Surmunn fra ende til annen! :("

  keepalive-job:
    name: Keep Github Actions alive
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v3
      - uses: gautamkrishnar/keepalive-workflow@v2
